; ModuleID = 'Mine'
source_filename = "Mine"

@A = internal global i32 zeroinitializer, align 4
@B = internal global double zeroinitializer, align 4
@C = internal global i8* zeroinitializer, align 4
@D = internal global i8 zeroinitializer, align 4
@E = internal global i32 zeroinitializer, align 4

declare i32 @printf(i8*, ...)

define void @main() {
hello:
  %0 = alloca [5 x i8]
  store [5 x i8] c"abcd\00", [5 x i8]* %0
  %1 = bitcast [5 x i8]* %0 to i8*
  store i32 1, i32* @A
  store double 0x3FF028F5C0000000, double* @B
  %2 = load i8, i8* %1
  store i8 %2, i8** @C
  store i8 99, i8* @D
  store i32 1, i32* @E
  %3 = alloca [4 x i8]
  store [4 x i8] c"%d\0A\00", [4 x i8]* %3
  %4 = bitcast [4 x i8]* %3 to i8*
  %5 = load i8, i8* %4
  %A = load i32, i32* @A
  %6 = call i32 (i8*, ...) @printf(i8 %5, i32 %A)
  %7 = alloca [4 x i8]
  store [4 x i8] c"%f\0A\00", [4 x i8]* %7
  %8 = bitcast [4 x i8]* %7 to i8*
  %9 = load i8, i8* %8
  %B = load double, double* @B
  %10 = call i32 (i8*, ...) @printf(i8 %9, double %B)
  %11 = alloca [4 x i8]
  store [4 x i8] c"%s\0A\00", [4 x i8]* %11
  %12 = bitcast [4 x i8]* %11 to i8*
  %13 = load i8, i8* %12
  %C = load i8*, i8** @C
  %14 = call i32 (i8*, ...) @printf(i8 %13, i8* %C)
  %15 = alloca [4 x i8]
  store [4 x i8] c"%c\0A\00", [4 x i8]* %15
  %16 = bitcast [4 x i8]* %15 to i8*
  %17 = load i8, i8* %16
  %D = load i8, i8* @D
  %18 = call i32 (i8*, ...) @printf(i8 %17, i8 %D)
  %19 = alloca [4 x i8]
  store [4 x i8] c"%d\0A\00", [4 x i8]* %19
  %20 = bitcast [4 x i8]* %19 to i8*
  %21 = load i8, i8* %20
  %E = load i32, i32* @E
  %22 = call i32 (i8*, ...) @printf(i8 %21, i32 %E)
  ret void
}
